<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">

    <!-- ActiveMQ 连接工厂 -->
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <!-- 如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码-->
    <amq:connectionFactory id="amqConnectionFactory"
                           brokerURL="${activemq.brokerURL}"
                           userName="${activemq.userName}"
                           password="${activemq.password}"/>

    <!-- Spring Caching连接工厂 -->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="100"/>
    </bean>


    <!-- 定义消息队列（Queue） -->
    <bean id="demoQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg value="ZA_GAMES"/>
    </bean>


    <!-- Spring JmsTemplate 的消息生产者 start-->

    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="demoQueueDestination"/>
        <property name="receiveTimeout" value="10000"/>
        <!-- true是topic，false是queue，默认是false，此处显示写出false -->
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!-- 定义JmsTemplate的Queue类型 -->
    <!--<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">-->
    <!--&lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;-->
    <!--<constructor-arg ref="connectionFactory"/>-->
    <!--&lt;!&ndash; 非pub/sub模型（发布/订阅），即队列模式 (这种模式被概括为：只有一个消费者将获得消息)&ndash;&gt;-->
    <!--<property name="pubSubDomain" value="false"/>-->
    <!--</bean>-->

    <!-- 定义JmsTemplate的Topic类型 -->
    <!--<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">-->
    <!--&lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;-->
    <!--<constructor-arg ref="connectionFactory"/>-->
    <!--&lt;!&ndash; pub/sub模型（发布/订阅）,即发布者／订阅者模型(这种模式被概括为：多个消费者可以获得消息) &ndash;&gt;-->
    <!--<property name="pubSubDomain" value="true"/>-->
    <!--</bean>-->

    <!--Spring JmsTemplate 的消息生产者 end-->


    <!-- 配置消息队列监听者（Queue） -->
    <bean id="queueMessageListener" class="com.zhuoan.webapp.listener.mq.QueueMessageListener"/>


    <!-- 消息消费者 采用异步接收 start-->
    <!-- 显示注入消息监听容器（Queue） -->
    <bean id="queueListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <!--配置连接工厂-->
        <property name="connectionFactory" ref="connectionFactory"/>
        <!--自定义监听器-->
        <property name="messageListener" ref="queueMessageListener"/>
        <!--监听目标-->
        <property name="destination" ref="demoQueueDestination"/>
    </bean>

    <!--&lt;!&ndash; 定义Topic监听器 &ndash;&gt;-->
    <!--<jms:listener-container destination-type="topic">-->
    <!--<jms:listener destination="test.topic" ref="topicReceiver1"/>-->
    <!--<jms:listener destination="test.topic" ref="topicReceiver2"/>-->
    <!--</jms:listener-container>-->

    <!-- 消息消费者 end -->
</beans>