<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--启用@Aspect-->
    <aop:aspectj-autoproxy />

    <!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.zhuoan.webapp" />

    <!-- 配置拦截器,多个拦截器,顺序执行 -->
    <!--<mvc:interceptors>-->
         <!--匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**" />-->
            <!--<mvc:exclude-mapping path="/MP_verify_**" />&lt;!&ndash; 微信js工具调用验证 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/statics/**" />-->
            <!--<mvc:exclude-mapping path="/error/**" />-->
            <!--<bean class="com.zhuoan.webapp.interceptor.WechatAuthInterceptor" />-->
        <!--</mvc:interceptor>-->
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    <!--</mvc:interceptors>-->

    <!-- 对静态资源文件的访问  restful-->
    <mvc:resources mapping="/statics/**" location="/statics/" />
	<!-- mvc:view-controller path="/" view-name="redirect:/login"/ -->

    <!-- 只根据路径解析视图，采用UrlBasedViewResolver -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".html" />
        <property name="viewClass" value="com.zhuoan.webapp.view.HtmlView"/>
	</bean>

    <!-- 将@ResponseBody返回的数据编码为UTF-8防止乱码 -->
    <mvc:annotation-driven>
        <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="1048576000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!--检验用户浏览器中的Cookie，用CookieLocaleResolver来解析区-->
    <!--<bean id="localeResolver"-->
    <!--class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />-->

    <!-- 统一公共异常处理 -->
    <bean id="exceptionHandler" class="com.zhuoan.webapp.aspect.UnCatchExceptionHandler"/>

    <!--此配置防止该类被重复加载，用来启用和关闭socketio服务-->
    <bean id="preDealSocketListener" class="com.zhuoan.webapp.listener.socketio.PreDealSocketListener"/>

</beans>
